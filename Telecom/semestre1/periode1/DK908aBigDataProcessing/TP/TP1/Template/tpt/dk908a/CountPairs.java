package tpt.dk908a;

import java.io.IOException;
import java.util.regex.Pattern;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.io.FloatWritable;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;

import org.apache.log4j.Logger;

//1) how do i get as input the list of movies graded over 3.5 by a user?? 

public class CountPairs {
    
    public static class Map extends Mapper<LongWritable, Text, Text, Text> {

	  public void map(LongWritable offset, javax.xml.soap.Text moviePair, Context context)
	     throws IOException, InterruptedException {
		  
		  /*the input is generated by ExtractMovieUser and looks like UserId-> MoviesId1,MoviId2,ect...*/
		  
		  
		   //because each elment in hadoop is separated by the \t
		   String[] input = moviePair.toString().split("\t");
		   IntWritable one = new IntWritable(1);
		   
		   //the second element of the array input contains the list of movies rated over 3.5 by the user
		   String movieIds[] = input[1].split(",");//then i will obtain and arry of movieID
		   int size = movieIds.length();
		   
		    //iterate over the list rated by each user over 3.5 and create pairs like (MId1,Mid2)->1,ect..
		       for(int i=0; i< size;i++) {
		     	  for(j=0;j<size;j++) {
		     		 Text reviewPair = new Text(movieIds[i]+","+movieIds[j]);
		             context.write(reviewPair, one); 
		     	  }
		       }
	   }
    }
    
    /*after the shuffle step, the input will look like (MId1,MId2)->1,1,ect.. */
  public static class Reduce extends Reducer<Text, Text, Text, Text> {	
	@Override
	  public void reduce(Text movie, Iterable<Text> values, Context context) 
	      throws IOException, InterruptedException {
		
	    int sum = 0;
		 
	         //sum up oll the occurnces for this specific pair.
             for(IntWritable v : values) { 
              	sum+= v.get(); /* for the value */
             }
          context.write(key,new IntWritable(sum));   
	   }
    }
}


